version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: gyvagaudziaispastai-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: medusa-store-dev
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - gyvagaudziaispastai-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: gyvagaudziaispastai-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - gyvagaudziaispastai-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Medusa Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: gyvagaudziaispastai-backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/medusa-store-dev
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=supersecret-jwt-key-change-in-production
      - COOKIE_SECRET=supersecret-cookie-key-change-in-production
      - STORE_CORS=http://localhost:3000,http://storefront:3000,http://localhost:8000
      - ADMIN_CORS=http://localhost:9000,http://localhost:7001
      - AUTH_CORS=http://localhost:9000,http://localhost:3000,http://storefront:3000
      - DISABLE_MEDUSA_ADMIN=false
      - MEDUSA_BACKEND_URL=http://localhost:9000
      - PAYSERA_PROJECT_ID=252103
      - PAYSERA_SIGN_PASSWORD=feb5e1c0c06a4737a6896b65f99808cd
      - FRONTEND_URL=http://localhost:3000
    volumes:
      - ./backend:/server
      - /server/node_modules
    ports:
      - "9000:9000"
      - "7001:7001"
    networks:
      - gyvagaudziaispastai-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9000/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 60s
    command: ["/server/start-dev.sh"]

  # Next.js Storefront
  storefront:
    build:
      context: ./storefront
      dockerfile: Dockerfile
    container_name: gyvagaudziaispastai-storefront
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - NEXT_PUBLIC_MEDUSA_BACKEND_URL=http://localhost:9000
      - NEXT_PUBLIC_BASE_URL=http://localhost:3000
      - MEDUSA_BACKEND_URL=http://backend:9000
      - NEXT_PUBLIC_MEDUSA_PUBLISHABLE_KEY=pk_ffe2341af0aa127aa05b4354cc290b002495e3b46c21e62721339d32af07c074
    volumes:
      - ./storefront:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    networks:
      - gyvagaudziaispastai-network
    command: ["npm", "run", "dev"]

volumes:
  postgres_data:
  redis_data:

networks:
  gyvagaudziaispastai-network:
    driver: bridge