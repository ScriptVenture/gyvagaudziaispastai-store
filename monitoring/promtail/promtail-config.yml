# ============================================
# Promtail Configuration
# ============================================

server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # =====================================
  # System Logs
  # =====================================
  - job_name: system-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: system-logs
          host: gyvagaudziaispastai
          __path__: /var/log/syslog

  # =====================================
  # Nginx Logs
  # =====================================
  - job_name: nginx-access
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx-access
          host: gyvagaudziaispastai
          __path__: /var/log/nginx/access.log
    pipeline_stages:
      - regex:
          expression: '^(?P<remote_addr>[\d\.]+) - (?P<remote_user>\S+) \[(?P<timestamp>[^\]]+)\] "(?P<method>\S+) (?P<path>\S+) (?P<protocol>\S+)" (?P<status>\d+) (?P<bytes>\d+) "(?P<referer>[^"]*)" "(?P<user_agent>[^"]*)"'
      - labels:
          method:
          status:
          path:

  - job_name: nginx-error
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx-error
          host: gyvagaudziaispastai
          __path__: /var/log/nginx/error.log

  # =====================================
  # Docker Container Logs
  # =====================================
  - job_name: docker-containers
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container_name'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'stream'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'service'
    pipeline_stages:
      - docker: {}
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - labels:
          stream:
          container_name:
          service:

  # =====================================
  # Application Specific Logs
  # =====================================
  - job_name: gyvagaudziaispastai-backend
    static_configs:
      - targets:
          - localhost
        labels:
          job: backend
          service: gyvagaudziaispastai-backend
          __path__: /var/lib/docker/containers/*/*.log
    relabel_configs:
      - source_labels: ['__path__']
        regex: '.*/([^/]+)\.log'
        target_label: 'container_id'
    pipeline_stages:
      - docker: {}
      - match:
          selector: '{service="gyvagaudziaispastai-backend"}'
          stages:
            - json:
                expressions:
                  level: level
                  message: message
                  timestamp: timestamp
            - labels:
                level:

  - job_name: gyvagaudziaispastai-storefront
    static_configs:
      - targets:
          - localhost
        labels:
          job: storefront
          service: gyvagaudziaispastai-storefront
          __path__: /var/lib/docker/containers/*/*.log
    pipeline_stages:
      - docker: {}
      - match:
          selector: '{service="gyvagaudziaispastai-storefront"}'
          stages:
            - json:
                expressions:
                  level: level
                  message: message
            - labels:
                level:

  # =====================================
  # Database Logs
  # =====================================
  - job_name: postgresql
    static_configs:
      - targets:
          - localhost
        labels:
          job: postgresql
          service: postgres
          __path__: /var/lib/docker/containers/*/*.log
    pipeline_stages:
      - docker: {}
      - match:
          selector: '{service="postgres"}'
          stages:
            - regex:
                expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.\d{3} \w+) \[(?P<pid>\d+)\] (?P<level>\w+):  (?P<message>.*)$'
            - labels:
                level:
                pid:

  - job_name: redis
    static_configs:
      - targets:
          - localhost
        labels:
          job: redis
          service: redis
          __path__: /var/lib/docker/containers/*/*.log
    pipeline_stages:
      - docker: {}
      - match:
          selector: '{service="redis"}'
          stages:
            - regex:
                expression: '^(?P<timestamp>\d+:\w \d{2} \w{3} \d{4} \d{2}:\d{2}:\d{2}\.\d{3}) (?P<level>[#*-]) (?P<message>.*)$'
            - labels:
                level: