# ============================================
# Low-Cost Monitoring Stack
# ============================================
# Lightweight monitoring for single EC2 instance

version: '3.8'

services:
  # =====================================
  # Prometheus - Metrics Collection
  # =====================================
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: gyvagaudziaispastai-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/rules.yml:/etc/prometheus/rules.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    restart: unless-stopped
    networks:
      - monitoring
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # =====================================
  # Grafana - Visualization
  # =====================================
  grafana:
    image: grafana/grafana:10.0.0
    container_name: gyvagaudziaispastai-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-SecureGrafana2025}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_DOMAIN=${DOMAIN:-localhost}
      - GF_SMTP_ENABLED=true
      - GF_SMTP_HOST=${SMTP_HOST:-localhost:587}
      - GF_SMTP_USER=${SMTP_USER}
      - GF_SMTP_PASSWORD=${SMTP_PASSWORD}
      - GF_SMTP_FROM_ADDRESS=${SMTP_FROM:-alerts@gyvagaudziaispastai.com}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/etc/grafana/dashboards
    restart: unless-stopped
    networks:
      - monitoring
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  # =====================================
  # Node Exporter - System Metrics
  # =====================================
  node-exporter:
    image: prom/node-exporter:v1.6.0
    container_name: gyvagaudziaispastai-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    networks:
      - monitoring
    deploy:
      resources:
        limits:
          memory: 32M
        reservations:
          memory: 16M

  # =====================================
  # cAdvisor - Container Metrics
  # =====================================
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    container_name: gyvagaudziaispastai-cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    restart: unless-stopped
    networks:
      - monitoring
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  # =====================================
  # Loki - Log Aggregation (Lightweight)
  # =====================================
  loki:
    image: grafana/loki:2.8.0
    container_name: gyvagaudziaispastai-loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki/loki-config.yml:/etc/loki/local-config.yaml
      - loki_data:/tmp/loki
    command: -config.file=/etc/loki/local-config.yaml
    restart: unless-stopped
    networks:
      - monitoring
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  # =====================================
  # Promtail - Log Shipper
  # =====================================
  promtail:
    image: grafana/promtail:2.8.0
    container_name: gyvagaudziaispastai-promtail
    volumes:
      - ./promtail/promtail-config.yml:/etc/promtail/config.yml
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yml
    restart: unless-stopped
    networks:
      - monitoring
    deploy:
      resources:
        limits:
          memory: 64M
        reservations:
          memory: 32M

  # =====================================
  # Uptime Kuma - Uptime Monitoring
  # =====================================
  uptime-kuma:
    image: louislam/uptime-kuma:1.23.1
    container_name: gyvagaudziaispastai-uptime-kuma
    ports:
      - "3002:3001"
    volumes:
      - uptime_data:/app/data
    restart: unless-stopped
    networks:
      - monitoring
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
  loki_data:
  uptime_data: