# =====================================================
# Production Nginx Configuration
# =====================================================

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 20M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;
    limit_req_zone $binary_remote_addr zone=storefront:10m rate=30r/s;

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Content Security Policy - Strict but allows necessary resources
    add_header Content-Security-Policy "default-src 'self' https://gyva.appiolabs.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://gyva.appiolabs.com; style-src 'self' 'unsafe-inline' https://gyva.appiolabs.com; img-src 'self' data: https: blob:; font-src 'self' data: https://gyva.appiolabs.com; connect-src 'self' https://gyva.appiolabs.com wss://gyva.appiolabs.com https://www.paysera.com; frame-src 'self' https://www.paysera.com https://bank.paysera.com; frame-ancestors 'none'; base-uri 'self'; form-action 'self' https://www.paysera.com; upgrade-insecure-requests;" always;
    
    # Permissions Policy (formerly Feature Policy)
    add_header Permissions-Policy "accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(self), usb=()" always;

    # Hide nginx version
    server_tokens off;

    # Upstream backends - Using Docker service names for better flexibility
    upstream backend {
        server backend:9000 max_fails=2 fail_timeout=10s;
        keepalive 16;
    }

    upstream storefront {
        server storefront:3000 max_fails=2 fail_timeout=10s;
        keepalive 16;
    }

    # Main HTTP server (Cloudflare handles SSL termination)
    server {
        listen 80;
        server_name gyva.appiolabs.com;

        # Store API endpoints (public store API) - These go to Medusa backend
        location /store/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://backend/store/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_read_timeout 300s;
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_buffer_size 16k;
            proxy_buffers 4 16k;
            proxy_busy_buffers_size 32k;
        }

        # Admin API endpoints - These go to Medusa backend  
        location /admin/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://backend/admin/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_read_timeout 300s;
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_buffer_size 16k;
            proxy_buffers 4 16k;
            proxy_busy_buffers_size 32k;
        }

        # Admin panel (Medusa admin is at /app)
        location /app {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://backend/app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }
        
        # Auth routes for admin
        location /auth/ {
            proxy_pass http://backend/auth/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }
        
        # Health check
        location /health {
            proxy_pass http://backend/health;
            proxy_set_header Host $host;
        }

        # Static files for Medusa uploads - serve directly from volume
        location /static/ {
            alias /var/www/static/;
            expires 30d;
            add_header Cache-Control "public, immutable" always;
            add_header X-Content-Type-Options nosniff always;
            add_header X-Frame-Options DENY always;
        }

        # Hero images and public assets - pass to storefront  
        location ~ ^/(imagen[0-9]+\.jpg|.*\.svg)$ {
            proxy_pass http://storefront;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            expires 30d;
            add_header Cache-Control "public, immutable" always;
            add_header X-Content-Type-Options nosniff always;
        }

        # Backend product images (timestamp-based filenames) - serve from volume
        location ~ ^/[0-9]+-.*\.(jpg|jpeg|png|gif|webp)$ {
            root /var/www/static;
            expires 30d;
            add_header Cache-Control "public, immutable" always;
            add_header X-Content-Type-Options nosniff always;
            add_header X-Frame-Options DENY always;
            try_files $uri =404;
        }

        # Alternative static files route via backend
        location /uploads/ {
            proxy_pass http://backend/uploads/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }

        # Storefront routes (everything else)
        location / {
            limit_req zone=storefront burst=50 nodelay;
            
            proxy_pass http://storefront/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_read_timeout 300s;
            proxy_connect_timeout 30s;

            # Next.js specific headers
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }
}
