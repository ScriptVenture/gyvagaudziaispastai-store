# Staging environment configuration
# Usage: docker-compose -f docker-compose.yml -f docker-compose.staging.yml up

version: '3.8'

services:
  postgres:
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    # No ports exposed - internal only

  redis:
    # No ports exposed - internal only

  backend:
    environment:
      - NODE_ENV=staging
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - JWT_SECRET=${JWT_SECRET}
      - COOKIE_SECRET=${COOKIE_SECRET}
      - STORE_CORS=${STORE_CORS}
      - ADMIN_CORS=${ADMIN_CORS}
      - AUTH_CORS=${AUTH_CORS}
      - DISABLE_MEDUSA_ADMIN=false
      - MEDUSA_BACKEND_URL=${MEDUSA_BACKEND_URL}
    # No volumes - use built image
    ports:
      - "${BACKEND_PORT:-9000}:9000"
    command: ["npm", "run", "start"]

  storefront:
    environment:
      - NODE_ENV=staging
      - NEXT_PUBLIC_MEDUSA_BACKEND_URL=${NEXT_PUBLIC_MEDUSA_BACKEND_URL}
      - NEXT_PUBLIC_BASE_URL=${NEXT_PUBLIC_BASE_URL}
    # No volumes - use built image
    ports:
      - "${STOREFRONT_PORT:-3000}:3000"
    command: ["npm", "run", "start"]